<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Home.aspx.cs" Inherits="fyp.Home" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>Home</title>
		<link rel="stylesheet" href="assets/css/main.css" />
		<link rel="stylesheet" href="assets/css/home.css" />
	    <link rel="stylesheet" href="assets/css/notifyAlert.css"/>
	    <!-- jQuery Library -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <!-- SignalR library -->
    <script src="assets/scripts/jquery.signalR-2.4.3.min.js"></script>
    <!-- SignalR Hubs script generated by the server -->
    <script src="/signalr/hubs"></script>
	<style>
		.modal {
    display: none; /* Hidden by default */
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.5); /* Black with opacity */
}

/* Modal content */
.modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border-radius: 10px;
    width: 500px;
    text-align: center;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    position: relative;
}

p {
 display: -webkit-box;          /* Enable a flexible box layout */
    -webkit-line-clamp: 3;        /* Number of lines to display */
    -webkit-box-orient: vertical; /* Vertical box orientation */
    overflow: hidden;             /* Hide the overflowed text */
    text-overflow: ellipsis;      /* Add "..." for truncated text */
    height: calc(1.5em * 3);      /* Adjust height based on line count (1.5em x number of lines) */
    line-height: 1.5em;           /* Set consistent line height */
    max-height: calc(1.5em * 3);
}

/* Close button */
.close {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 24px;
    font-weight: bold;
    color: #aaa;
    cursor: pointer;
}

.close:hover,
.close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

/* Buttons */
.modal-buttons {
    margin-top: 20px;
}

/* LOGIN button */
.btn-primary {
    background-color: black;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
}

.btn-primary:hover {
    opacity: 0.8;
}

  .circle {
    width: 30px;          /* Smaller width */
    height: 30px;         /* Smaller height */
    border-radius: 50%;   /* Makes the div a circle */
    background-color: #ff0000;
    display: flex;
    justify-content: center; /* Center the number horizontally */
    align-items: center;    /* Center the number vertically */
    font-size: 16px;        /* Smaller font size */
    color: #ffffff;
  }

  .hidden {
    display: none;              /* Hide the circle when the count is 0 */
  }

    .notification>strong{
       color:white;
  }

	</style>
</head>
<body class="homepage is-preload">
		<div id="page-wrapper">

			<!-- Header -->
				<div id="header">

					<!-- Inner -->
						<div class="inner">
							<header>
								<h1><a href="#" id="logo">LibraNet</a></h1>
								<hr />
								<p>Welcome to our Library Website</p>
							</header>
							<footer>
								<a href="#banner" class="button circled scrolly">Start</a>
							</footer>
						</div>

					<!-- Nav -->
					<nav id="nav">
						<ul>
							<li><a href="Home.aspx">Home</a></li>
							<li><a href="BookSearch.aspx">View Books</a></li>
							<li><a href="#" onclick="checkLoginRec()">Recommendation Books</a></li>
							<li><a href="#" onclick="checkLoginLoan()">Loan Books</a></li>
							<li>
								<a href="#" onclick="checkLogin()">Account</a>
								<ul id="AccDropdown" runat="server">
                                     <li>                                 <div class="circle <%= getNotiCount() == 0 ? "hidden" : "" %>">
  <%= getNotiCount() %>
</div><a href="Announcement.aspx" style="position: relative; display: inline-flex; align-items: center;">Inbox & 
                                Announcement 


                                </a></li>
									<li id="DashDropdown" runat="server"><a href="DashManagement.aspx">DashBoard</a></li>
									<li><a href="FavouriteGroup.aspx" id="fav" runat="server">Favourite Books</a></li>
									<li><a href="History.aspx" id="history" runat="server">History</a></li>
									<li><a href="profile.aspx">Profile</a></li>
									<li><a href="Logout.aspx">Log Out</a></li>
								</ul>
							</li>
						</ul>
					</nav>
		

				</div>

			<!-- Banner -->
				<section id="banner">
					<header>
						<h2>Hi. You're looking for some <strong>BOOKS</strong>.</h2>
						<p>
							Here are some popular books for you to discover !!
						</p>
					</header>
				</section>

			<!-- Carousel -->
				<section class="carousel">
					<div class="reel">
                        <asp:Repeater runat="server" ID="rptBook">
                            <ItemTemplate>
                                <article >
							<a href="BookDetail.aspx?bookid=<%# Eval("BookId") %>" class="image featured"><img src="<%# Eval("BookImage")!=DBNull.Value ? fyp.ImageHandler.GetImage((byte[])Eval("BookImage")): "images/defaultCoverBook.png" %>" alt="" /></a>
							<header>
								<h3><a href="BookDetail.aspx?BookId=<%# Eval("BookId") %>"><%# Eval("BookTitle") %></a></h3>
							</header>
							<p class="truncate"><%# Eval("BookDesc") %></p>
						</article>

                            </ItemTemplate>
                        </asp:Repeater>

	
					</div>
				</section>

			<!-- Main -->
				<div class="wrapper style2">

					<article id="main" class="container special">
						<a href="#" class="image featured"><img src="images/library.jpg" alt="" /></a>
						<header>
							<h2><a href="#">TARUMT Library</a></h2>
							<p>
								A Hub of Knowledge and Innovation
							</p>
						</header>
						<p>
							The TARUMT Library is the central resource for students, faculty, and staff at Tunku Abdul Rahman University of Management and Technology (TARUMT). Committed to fostering a culture of learning and research, the library offers a vast collection of books, journals, digital resources, and research materials spanning various disciplines. With state-of-the-art facilities, the TARUMT Library provides a conducive environment for study, collaboration, and exploration. Additionally, it supports the academic community through workshops, training sessions, and personalized assistance to enhance information literacy and research skills. Whether you are looking for traditional texts or the latest in digital resources, the TARUMT Library is your gateway to knowledge and innovation.
						</p>
					</article>

				</div>

			<!-- Footer -->
				<div id="footer">
					<div class="container">

						
						<div class="row">
							<div class="col-12">

								<!-- Contact -->
									<section class="contact">
										<header>
											<h3>Nisl turpis nascetur interdum?</h3>
										</header>
										<p>Urna nisl non quis interdum mus ornare ridiculus egestas ridiculus lobortis vivamus tempor aliquet.</p>
										<ul class="icons">
											<li><a href="#" class="icon brands fa-twitter"><span class="label">Twitter</span></a></li>
											<li><a href="#" class="icon brands fa-facebook-f"><span class="label">Facebook</span></a></li>
											<li><a href="#" class="icon brands fa-instagram"><span class="label">Instagram</span></a></li>
											<li><a href="#" class="icon brands fa-pinterest"><span class="label">Pinterest</span></a></li>
											<li><a href="#" class="icon brands fa-dribbble"><span class="label">Dribbble</span></a></li>
											<li><a href="#" class="icon brands fa-linkedin-in"><span class="label">Linkedin</span></a></li>
										</ul>
									</section>

								<!-- Copyright -->
									<div class="copyright">
										<ul class="menu">
											<li>&copy; Untitled. All rights reserved.</li><li>Design: <a href="http://html5up.net">HTML5 UP</a></li>
										</ul>
									</div>

							</div>

						</div>
					</div>
				</div>

		</div>
    <div id="loginModal" class="modal">
        <div class="modal-content">
            <span id="closeModal" class="close">&times;</span>
            <h2 style="font-weight: 900; font-size: 1.25em; text-align: left;">Login Required</h2>
            <p>Please go to the login page.</p>
            <div class="modal-buttons" style="text-align: left;">
                <button id="loginButton" class="btn btn-primary" style="width: 280px;">
                    LOGIN</button>
            </div>
        </div>
    </div>
    <div id="notificationContainer" class="notification-container">
    </div>
	</body>
		<!-- Scripts -->
			<script src="assets/js/jquery.dropotron.min.js"></script>
			<script src="assets/js/jquery.scrolly.min.js"></script>
			<script src="assets/js/jquery.scrollex.min.js"></script>
			<script src="assets/js/browser.min.js"></script>
			<script src="assets/js/breakpoints.min.js"></script>
			<script src="assets/js/util.js"></script>
			<script src="assets/js/main.js"></script>
	<script type="text/javascript">
        $(document).ready(function () {
            if (typeof $.signalR === "undefined") {
                console.error("SignalR is not loaded.");
            } else {
                console.log("SignalR loaded successfully.");

                // Set up the SignalR connection with the userId query string
                var userId = <%= userid.ToString() %>; // Assuming the userId is stored in a hidden input
                if (!userId) {
                    console.error("User ID is missing. SignalR connection will fail.");
                    return;
                }
                $.connection.hub.qs = { userId: userId };

                // Start the connection to SignalR
                $.connection.hub.start()
                    .done(function () {
                        console.log("Connected to SignalR. Connection ID: " + $.connection.hub.id);
                    })
                    .fail(function (error) {
                        console.error("Failed to connect to SignalR: " + error);
                    });

                // Set up the SignalR hub proxy for notifications
                var notificationHub = $.connection.notificationHub;

                // Define the client-side method to receive inbox notifications
                notificationHub.client.broadcastInbox = function (title, content, sendAt) {
                    console.log("Inbox notification received:", title, content, sendAt);
                    let formattedSendAt;
                    try {
                        formattedSendAt = new Date(sendAt).toLocaleString();
                    } catch (error) {
                        console.error("Error formatting sendAt date:", error);
                        formattedSendAt = "Unknown date";
                    }
                    showNotification(`${title} (Received on ${formattedSendAt})`, content, "inbox");
                };

                // Define the client-side method to receive announcements
                notificationHub.client.receiveAnnouncement = function (title, content) {
                    console.log("Announcement received:", title, content);
                    showNotification(title, content, "announcement");
                };
                var notifyLoan = <%= notifyLoan.ToString().ToLower() %>;
                console.log(notifyLoan);
                // Define the client-side method for overdue notifications
                if (notifyLoan) {
                    notificationHub.client.overdueNotification = function (title, content) {
                        console.log("Overdue notification received:", title, content);
                        showNotification(`${title}`, content, "overdue");
                    };
                }
                

                // Function to show notifications
                function showNotification(title, content, type) {
                    console.log("Show notification called:", title, content, type);

                    // Create a new notification element
                    const notification = document.createElement("div");
                    notification.classList.add("notification");
                    notification.innerHTML = `
                    <button class="close-btn">&times;</button>
                    <strong>${title}</strong>
                    <p>${content}</p>
                `;

                    // Set the notification type
                    document.querySelector("#notificationContainer").setAttribute("data-type", type);

                    // Append the notification to the container
                    const container = document.querySelector("#notificationContainer");
                    container.appendChild(notification);

                    // Show the container if it's hidden
                    container.style.display = "block";

                    // Close button functionality
                    notification.querySelector(".close-btn").addEventListener("click", () => {
                        notification.style.opacity = "0";
                        setTimeout(() => notification.remove(), 300); // Smooth fade-out
                    });

                    // Automatically hide the notification after 15 seconds
                    setTimeout(() => {
                        if (notification) {
                            notification.style.opacity = "0";
                            setTimeout(() => notification.remove(), 300); // Smooth fade-out
                        }
                    }, 10000);
                }
            }
		});

        function checkLogin() {
            var isAuthenticated = '<%= User.Identity.IsAuthenticated %>' === 'True'; // Check authentication status

            if (!isAuthenticated) {
                // Show the modal
                document.getElementById('loginModal').style.display = 'block';

                // Handle the LOGIN button
                document.getElementById('loginButton').onclick = function () {
                    window.location.href = 'Login.aspx'; // Redirect to login
                };

                // Handle the close button (X)
                document.getElementById('closeModal').onclick = function () {
                    document.getElementById('loginModal').style.display = 'none'; // Close the modal
                };
            } else {
                // Redirect to the profile page if authenticated
                window.location.href = 'profile.aspx';
            }
        }


        function checkLoginRec() {
            var isAuthenticated = '<%= User.Identity.IsAuthenticated %>' === 'True'; // Check authentication status
            var userRole = '<%= Session["UserRole"] != null ? Session["UserRole"] : "Guest" %>'; // Default to "Guest" if Session is null

            if (!isAuthenticated) {
                // Show the modal if not authenticated
                document.getElementById('loginModal').style.display = 'block';

                // Handle the LOGIN button
                document.getElementById('loginButton').onclick = function () {
                    window.location.href = 'Login.aspx'; // Redirect to login
                };

                // Handle the close button (X)
                document.getElementById('closeModal').onclick = function () {
                    document.getElementById('loginModal').style.display = 'none'; // Close the modal
                };
            } else {
                // Check the user's role
                if (userRole === 'Admin' || userRole === 'Staff') {
                    // Display an alert or redirect to an error page for unauthorized access
                    alert('Admins and Staff cannot access the user page.');
             //       window.location.href = '/error/403Forbidden.aspx'; // Redirect to a 403 Forbidden error page
                } else {
                    // Redirect to the profile page if authenticated and role is valid
                    window.location.href = 'Recommendation.aspx';
                }
            }
		}

        function checkLoginLoan() {
            var isAuthenticated = '<%= User.Identity.IsAuthenticated %>' === 'True'; // Check authentication status
            var userRole = '<%= Session["UserRole"] != null ? Session["UserRole"] : "Guest" %>'; // Default to "Guest" if Session is null

            if (!isAuthenticated) {
                // Show the modal if not authenticated
                document.getElementById('loginModal').style.display = 'block';

                // Handle the LOGIN button
                document.getElementById('loginButton').onclick = function () {
                    window.location.href = 'Login.aspx'; // Redirect to login
                };

                // Handle the close button (X)
                document.getElementById('closeModal').onclick = function () {
                    document.getElementById('loginModal').style.display = 'none'; // Close the modal
                };
            } else {
                // Check the user's role
                if (userRole === 'Admin' || userRole === 'Staff') {
                    // Display an alert or redirect to an error page for unauthorized access
                    alert('Admins and Staff cannot access the user page.');
                   // window.location.href = '/error/403Forbidden.aspx'; // Redirect to a 403 Forbidden error page
                } else {
                    // Redirect to the profile page if authenticated and role is valid
                    window.location.href = 'LoanList.aspx';
                }
            }
        }

        if (!sessionStorage.getItem("pageHistory")) {
            sessionStorage.setItem("pageHistory", JSON.stringify([])); // Initialize with an empty array
        }
        function trackPageHistory() {
            var pageHistory = JSON.parse(sessionStorage.getItem("pageHistory"));
            var currentPage = window.location.href; // Get the current page URL

            // Avoid adding the same page URL multiple times
            if (pageHistory[pageHistory.length - 1] !== currentPage) {
                pageHistory.push(currentPage); // Add the current page to the history
                sessionStorage.setItem("pageHistory", JSON.stringify(pageHistory)); // Store it back in session storage
            }
        }

        trackPageHistory();

    </script>
	
</html>